def libraryVersions = [
        kotlinVersion           : '1.3.50',
        ktxVersion              : '1.1.0',
        appcompatVersion        : '1.1.0',
        constraintLayoutVersion : '1.1.3',
        lifecycleVersion        : '2.1.0',
        navigationVersion       : '1.0.0',
        roomVersion             : '2.2.1',
        materialVersion         : '1.0.0',
        retrofitVersion         : '2.6.1',
        coroutinesAdapterVersion: '0.9.2',
        gsonVersion             : '2.8.6',
        okhttpVersion           : '4.2.0',
        coroutinesVersion       : '1.3.0',
        glideVersion            : '4.10.0'
]

ext {
    stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${libraryVersions.kotlinVersion}"
    androidXlibs = [
            ktx                  : "androidx.core:core-ktx:${libraryVersions.ktxVersion}",
            appCompat            : "androidx.appcompat:appcompat:${libraryVersions.appcompatVersion}",
            constraint           : "androidx.constraintlayout:constraintlayout:${libraryVersions.constraintLayoutVersion}",
            lifecycleExtensions  : "androidx.lifecycle:lifecycle-extensions:${libraryVersions.lifecycleVersion}",
            lifecycleViewModelKtx: "androidx.lifecycle:lifecycle-viewmodel-ktx:${libraryVersions.lifecycleVersion}"
    ]
    navigationLib = [
            navigationFragmentKtx: "android.arch.navigation:navigation-fragment-ktx:${libraryVersions.navigationVersion}",
            navigationUiKtx      : "android.arch.navigation:navigation-ui-ktx:${libraryVersions.navigationVersion}"
    ]
    roomDependencies = [
            roomRuntime: "androidx.room:room-runtime:${libraryVersions.roomVersion}",
            roomRxJava : "androidx.room:room-ktx:${libraryVersions.roomVersion}"
    ]
    roomAnnotationProcessor = "androidx.room:room-compiler:${libraryVersions.roomVersion}"
    material = "com.google.android.material:material:${libraryVersions.materialVersion}"
    networkDependencies = [
            retrofit         : "com.squareup.retrofit2:retrofit:${libraryVersions.retrofitVersion}",
            converterGson    : "com.squareup.retrofit2:converter-gson:${libraryVersions.retrofitVersion}",
            coroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${libraryVersions.coroutinesAdapterVersion}",
            gson             : "com.google.code.gson:gson:${libraryVersions.gsonVersion}",
            okhttp           : "com.squareup.okhttp3:okhttp:${libraryVersions.okhttpVersion}",
            logginInterceptor: "com.squareup.okhttp3:logging-interceptor:${libraryVersions.okhttpVersion}"
    ]
    kotlinCoroutines = [
            coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${libraryVersions.coroutinesVersion}",
            coroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${libraryVersions.coroutinesVersion}"
    ]
    glide = "com.github.bumptech.glide:glide:${libraryVersions.glideVersion}"
    glideCompiler = "com.github.bumptech.glide:compiler:${libraryVersions.glideVersion}"
}